<%- include('./partials/header.ejs') %> <%- include('./partials/nav.ejs') %>

<div class="container w-2/3">
  <div class="py-16">
    <div>
      <div class="text-center">
        <h1 class="text-5xl font-semibold">Bask.it</h1>
        <h2 class="text-lg mt-4">
          An understandable savings planner for parents and their children
        </h2>
      </div>

      <div class="grid grid-cols-3 gap-x-16 mt-8">
        <form method="post" action="/formsubmit">
          <label>Child's Age</label>
          <input type="number" name="age" min="0" />

          <label class="mt-5">Age of Payment</label>
          <input type="number" name="age_of_payment" min="0" max="100" />

          <label class="mt-5">Goal Amount (£)</label>
          <input type="number" name="goal_amount" min="0" />

          <label class="mt-5">Interest Rate (%)</label>
          <input type="number" name="interest_rate" min="0" max="20" />

          <button
            type="submit"
            class="mt-5 bg-yellow-300 hover:bg-yellow-400 font-medium py-2 px-4 rounded w-full"
          >
            Submit
          </button>
        </form>

        <div class="col-span-2">
          <h2 class="text-lg mt-4 mb-4">
            Our Bask.it algorithm calculates the most manageable and accurate
            savings plan that will get you to your goal. We prioritise
            affordable savings first, and speed second.
          </h2>

          <% if (data.length > 0) { %>
          <h2 class="hide-initial text-lg mt-4 mb-4">
            In order of ease and efficiency, we recommend the following:
          </h2>
          <div class="mb-4">
            <p>Sort by: </p>
            <button onclick="sortTable('monthly')" class="mt-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 pl-4 pr-2 mx-1 rounded">
              <p>Monthly Deposit Amount <span class="align-bottom material-symbols-outlined">arrow_drop_down</span></p>
            </button>
            <button onclick="sortTable('years')"   class="mt-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 pl-4 pr-2 mx-1 rounded">
              <p>Number of Years <span class="align-bottom material-symbols-outlined">arrow_drop_down</span></p>
            </button>
            <button onclick="sortTable('total')"   class="mt-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 pl-4 pr-2 mx-1 rounded">
              <p>Total Savings Amount <span class="align-bottom material-symbols-outlined">arrow_drop_down</span></p>
            </button>
          </div>
          <% } %>

          <% if (data[0]){ %>
            <div class="grid grid-cols-2">
                <button class="tab rounded-tl-md selected" value="text">Text View</button>
                <button class="tab border-r rounded-tr-md" value="table">Table View</button>
            </div>

            <div id="text_view">
                <% for (const i in data) { %>
                    <div class="display-box">
                      <p data-monthly="<%= data[i][0] %>" data-years="<%= data[i][1] %>" data-total="<%= data[i][3] %>">
                        Save <span class="font-medium">£<%= data[i][0] %></span> per month for <%= data[i][1] %> <%- data[i][1] > 1 ? 'years':'year' %> at
                        <%= data[i][2] %>% interest to get <span class="font-medium">£<%= data[i][3] %></span>
                      </p>
                    </div>
                    <% } %>
              </div>
    
              <div id="table_view" class="hidden">
                <div class="border-gray-800 border-t border-l border-r px-2 py-0.5 font-semibold text-center text-sm italic"><%= data[0][2] %>% Interest Rate</div>
                <table class="w-full">
                  <tr>
                      <th>Timespan</th>
                      <th>Saving per Month</th>
                      <th>Return</th>
                  </tr>
                  <tr>
                      <% for (const i in data) { %>
                          <tr>
                              <td><%= data[i][1] %> years</td>
                              <td>£<%= data[i][0] %></td>
                              <td>£<%= data[i][3] %></td>
                          </tr>
                      <% } %>
                  </tr>
                </table>
              </div>
          <% } %>
        </div>
      </div>
    </div>

    <div class="mt-16">
        <canvas id="chart1"></canvas>
        
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            /*const ctx2 = document.getElementById('chart1');
            var data = <%- JSON.stringify(data) %>;
            console.log(data);
            

            new Chart(ctx2, {
            type: 'bar',
            data: {
                dataset: [{
                    <% for (const i in data) { %>
                        type: 'bar',
                        label: 'X% Interest Rate',
                        data: [
                            <% for (const k in data) { %>
                                '<% data[i][0] %>'
                            <% } %>
                        ],
                        backgroundColor: '#b50000',
                        borderColor: '#b50000'
                        }, {
                    <% } %>
                }],

                labels: ['9', '10', '11', '12', '13', '14', '15', '16', '17', '18'],
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Age',
                            font: {
                                size: 14
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Investment (£)',
                            font: {
                                size: 14
                            }
                        }
                    }
                }
            }
            });





            const ctx = document.getElementById('chart1');

            new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [{
                    type: 'line',
                    label: 'X% Interest Rate',
                    data: [20, 30, 50, 75, 120, 180, 250, 340, 480, 620],
                    backgroundColor: '#b50000',
                    borderColor: '#b50000'
                }, {
                    type: 'line',
                    label: 'S&P 500',
                    data: [20, 72, 166, 56, 195, 157, 268, 452, 401, 722],
                    backgroundColor: '#112766',
                    borderColor: '#112766'

                }],
                labels: ['9', '10', '11', '12', '13', '14', '15', '16', '17', '18'],
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Age',
                            font: {
                                size: 14
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Investment (£)',
                            font: {
                                size: 14
                            }
                        }
                    }
                }
            }
            });*/
        </script>
    </div>
  </div>
</div>

<script>
  let isAsc = true;
  let lastAttr = "";

  function sortTable(attr) {
    var rows, swapping, i, x, y, shouldSwap;
    swapping = true;

    if (attr == lastAttr) {
      isAsc = !isAsc;
    }
    else {
      isAsc = true;
    }

    lastAttr = attr;

    // Keep looping until no more row swaps have been made
    while (swapping) {
      swapping = false;
      rows = document.querySelectorAll(".display-box");
      
      // Loop through all rows
      for (i = 0; i < rows.length - 1; i++) {
        shouldSwap = false;
        
        /* Get the two elements you want to compare,
        one from current row and one from the next: */
        x = rows[i].getElementsByTagName("p")[0];
        y = rows[i + 1].getElementsByTagName("p")[0];

        // Check if the two rows should switch place
        if ((isAsc && parseFloat(x.dataset[`${attr}`]) > parseFloat(y.dataset[`${attr}`])) || (!isAsc && parseFloat(x.dataset[`${attr}`]) < parseFloat(y.dataset[`${attr}`]))) {
          // If so, mark as a switch and break the loop
          shouldSwap = true;
          break;
        }
      }
      if (shouldSwap) {
        /* If a switch has been marked, make the switch
        and mark that a switch has been done: */
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        swapping = true;
      }
    }
  }
</script>

<%- include('./partials/footer.ejs') %>


<script>
    var tabs = Array.from(document.getElementsByClassName('tab'));
    const text_view = document.getElementById('text_view');
    const table_view = document.getElementById('table_view');
    
    tabs.forEach((tab) => {
        tab.addEventListener('click', function(){
            var view = this.value;
            tabs.forEach((tab_btn) => {
                tab_btn.classList.remove('selected');
            })

            if (view == 'text'){
                text_view.classList.remove('hidden');
                table_view.classList.add('hidden');
                tab.classList.add('selected');
            } else {
                table_view.classList.remove('hidden');
                text_view.classList.add('hidden');
                tab.classList.add('selected');
            }
        })
    })
</script>